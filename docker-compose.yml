services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.spring
    image: akasia/otp_financial:v2.2
    ports:
      - "8080:8080"
    environment:
      - TZ=Asia/Seoul
    env_file:
      .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  python-app:
    build:
      context: ./src/main/java/com/gdgyonsei/otp/domains/analysis/pythons
      dockerfile: Dockerfile.python
    image: akasia/otp_python:v2.2
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_APP=app.py
      - PYTHON UNBUFFERED=1
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_URL_FOR_PYTHON=${DB_URL_FOR_PYTHON}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge




